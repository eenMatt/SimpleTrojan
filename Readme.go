/*
 * CODE GENERATED AUTOMATICALLY WITH
 *    github.com/wlbr/mule
 * THIS FILE SHOULD NOT BE EDITED BY HAND
 */

package main

import "encoding/base64"

// ReadmeResource is a generated function returning the Resource as a []byte.
func ReadmeResource() ([]byte, error) {
	var resource = ""

	return base64.StdEncoding.DecodeString(resource)
}
